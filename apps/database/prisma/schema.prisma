// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model (synced with Clerk authentication)
model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique // Clerk user ID
  email     String   @unique
  firstName String?
  lastName  String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  diagnoses  Diagnosis[]
  forecasts  Forecast[]
  reports    Report[]

  @@index([clerkId])
  @@index([email])
}

// Malaria Diagnosis Records
model Diagnosis {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Patient Information
  patientAge  Int?
  patientSex  String?
  location    String?
  latitude    Float?
  longitude   Float?
  
  // Diagnosis Data
  imageUrl    String   // URL to the uploaded microscope image
  result      String   // positive, negative, uncertain
  confidence  Float    // 0-100 percentage
  parasiteCount Int?   // Number of parasites detected
  species     String?  // P. falciparum, P. vivax, etc.
  
  // Symptoms
  symptoms    Json?    // JSON object with symptom data
  
  // AI Model Info
  modelVersion String
  processingTime Float  // in seconds
  
  // Metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([result])
  @@index([createdAt])
}

// Outbreak Forecast Predictions
model Forecast {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Location Data
  location    String
  latitude    Float
  longitude   Float
  region      String?
  country     String
  
  // Forecast Data
  startDate   DateTime
  endDate     DateTime
  riskLevel   String   // low, medium, high, critical
  casesLow    Int      // Lower bound prediction
  casesHigh   Int      // Upper bound prediction
  casesMean   Int      // Mean prediction
  
  // Environmental Factors
  temperature Float?
  rainfall    Float?
  humidity    Float?
  
  // Model Info
  modelVersion String
  confidence  Float    // 0-100 percentage
  
  // Metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([location])
  @@index([riskLevel])
  @@index([startDate])
}

// Generated Reports
model Report {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  title       String
  type        String   // diagnosis_summary, forecast_summary, custom
  content     Json     // JSON content of the report
  status      String   @default("draft") // draft, published, archived
  
  // Filters/Parameters used
  dateFrom    DateTime?
  dateTo      DateTime?
  location    String?
  
  // Metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  publishedAt DateTime?

  @@index([userId])
  @@index([type])
  @@index([status])
}

// System Logs for monitoring
model SystemLog {
  id          String   @id @default(cuid())
  level       String   // info, warning, error, critical
  service     String   // web, inference, database
  message     String
  metadata    Json?
  createdAt   DateTime @default(now())

  @@index([level])
  @@index([service])
  @@index([createdAt])
}
